// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: osi_roadmarking.proto

/* eslint-disable */
import {
  type BaseStationary,
  type ColorDescription,
  type ExternalReference,
  type Identifier,
  type LogicalLaneAssignment,
} from "./osi_common";
import { type TrafficSign_MainSign_Classification_Type, type TrafficSignValue } from "./osi_trafficsign";

/**  */
export interface RoadMarking {
  /**
   * The ID of the road marking.
   *
   * \rules
   * is_set
   * \endrules
   */
  id?:
    | Identifier
    | undefined;
  /**
   * The base parameters of the road marking.
   *
   * The orientation of the bounding box \c #base
   * \c BaseStationary::orientation is defined as follows:
   * The z-axis of the \c BaseStationary::orientation is the vector from the
   * 'bottom' to the 'top' of the road marking's (i.e. painted traffic sign)
   * 2D image area.
   * (Normally it is in the ground truth xy-plain.)
   * The x-axis of the \c BaseStationary::orientation is the view normal of
   * the road marking's 2D image area.
   * Normally this x-axis points to the sky.
   *
   * \note If a valid unidirectional road marking is assigned to the host
   * vehicle's current lane and the driving direction of the latter roughly
   * matches the z-axis of the \c #base \c BaseStationary::orientation then
   * the road marking is of relevance to (i.e. in effect for) the host
   * vehicle.
   */
  base?:
    | BaseStationary
    | undefined;
  /** The classification data for the road marking. */
  classification?:
    | RoadMarking_Classification
    | undefined;
  /**
   * Optional external reference to the road-marking source.
   *
   * The external reference points to the source of the surface marking, if it
   * is derived from one or more objects or external references. An example
   * here is the reference to the signal defined in a OpenDRIVE map.
   *
   * For example, to reference a signal defined in an OpenDRIVE map
   * the items should be set as follows:
   * * reference = URI to map, can remain empty if identical with definition
   *               in \c GroundTruth::map_reference
   * * type = "net.asam.opendrive"
   * * identifier[0] = id of t_road_signals_signal
   *
   * \note With OpenDRIVE, surface markings can also be defined as objects.
   *       In this case, the associated object is usually referenced within
   *       OpenDRIVE using the reference t_road_signals_signal_reference.
   *       An additional reference to the object is therefore not necessary.
   *
   * \note For non-ASAM Standards, it is implementation-specific how
   *       source_reference is resolved.
   *
   * \note The value has to be repeated, because one lane segment may be
   *       derived from more than one origin segment. Multiple sources
   *       may be added as reference as well, for example, a map and sensors.
   */
  source_reference?:
    | ExternalReference[]
    | undefined;
  /**
   * The visual color of the material of the road marking.
   *
   * \note This does not represent the semantic classification but the visual
   * appearance. For semantic classification of the road marking use the color
   * field in \c Classification.
   */
  color_description?: ColorDescription | undefined;
}

/** \brief \c Classification data for a road surface marking. */
export interface RoadMarking_Classification {
  /** The type of the road marking. */
  type?:
    | RoadMarking_Classification_Type
    | undefined;
  /**
   * Traffic sign as road marking (color image, monochrome image or
   * character string).
   *
   * \note Field is set if ( \c #type == \c #TYPE_PAINTED_TRAFFIC_SIGN or
   * \c #TYPE_SYMBOLIC_TRAFFIC_SIGN or \c #TYPE_TEXTUAL_TRAFFIC_SIGN ).
   *
   * \note Field need not be set (or set to \c #TYPE_OTHER)
   * if road marking type (\c #type) does not require it.
   *
   * \attention Deprecated: A revision is planned for version 4.0.0 to
   * replace the type enum with a more semantically defined enumeration,
   * with the exact sign specification being relegated to the newly
   * introduced 4-tupel traffic sign catalog specification as used in
   * <a href="https://releases.asam.net/OpenDRIVE/1.6.0/ASAM_OpenDRIVE_BS_V1-6-0.html#_signals">OpenDRIVE</a>.
   *
   * \rules
   * check_if this.type is_greater_than_or_equal_to 2 else do_check is_set
   * check_if this.type is_less_than_or_equal_to 4 else do_check is_set
   * \endrules
   */
  traffic_main_sign_type?:
    | TrafficSign_MainSign_Classification_Type
    | undefined;
  /**
   * \note Field need not be set (or set to \c #COLOR_OTHER)
   * if road marking type does not require it (e.g. for \c #type ==
   * \c #TYPE_PAINTED_TRAFFIC_SIGN).
   *
   * \rules
   * check_if this.type is_equal_to 2 else do_check is_set
   * check_if this.monochrome_color is_equal_to 1 else do_check is_set
   * \endrules
   */
  monochrome_color?:
    | RoadMarking_Classification_Color
    | undefined;
  /**
   * Additional value associated with the road marking, e.g. value of the
   * speed limit.
   *
   * \note Field need not be set if road marking type does not require it.
   *
   * \note OSI 3 uses \c #value_text and not \c TrafficSignValue for
   * simple chars.
   */
  value?:
    | TrafficSignValue
    | undefined;
  /**
   * Additional text value as road marking, e.g. BUS, TAXI etc.
   *
   * \note Field need not be set if road marking type does not require it.
   */
  value_text?:
    | string
    | undefined;
  /**
   * The ID(s) of the lane(s) that the road marking is assigned to.
   * May be multiple if the road marking goes across multiple lanes.
   *
   * \note OSI uses singular instead of plural for repeated field names.
   *
   * \rules
   * refers_to: Lane
   * \endrules
   */
  assigned_lane_id?:
    | Identifier[]
    | undefined;
  /**
   * Boolean flag to indicate that the road marking is taken out of service.
   * This can be achieved by visibly crossing the road marking with stripes,
   * or completely covering a road marking making it not visible.
   *
   * \image html OSI_RoadMaking_is_out_of_service.jpg width=800px
   */
  is_out_of_service?:
    | boolean
    | undefined;
  /**
   * Country specification of the traffic sign catalog specification
   * that identifies the actual traffic sign. This is part of the
   * 4-tupel traffic sign catalog specification as used in
   * <a href="https://releases.asam.net/OpenDRIVE/1.6.0/ASAM_OpenDRIVE_BS_V1-6-0.html#_signals">OpenDRIVE</a>.
   *
   * Country is specified using the ISO 3166-1, alpha-2 code
   * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2, or the
   * special OpenDRIVE country for generic signs.<br>
   *
   * \rules
   * check_if this.type is_greater_than_or_equal_to 2 else do_check is_set
   * check_if this.type is_less_than_or_equal_to 4 else do_check is_set
   * \endrules
   */
  country?:
    | string
    | undefined;
  /**
   * Revision specification of the traffic sign catalog specification
   * that identifies the actual traffic sign. This is part of the
   * 4-tupel traffic sign catalog specification as used in
   * <a href="https://releases.asam.net/OpenDRIVE/1.6.0/ASAM_OpenDRIVE_BS_V1-6-0.html#_signals">OpenDRIVE</a>.
   *
   * The year the traffic rules came into force. <br>
   * e.g. "2017"
   *
   * \note Field is set if ( \c #type == \c #TYPE_PAINTED_TRAFFIC_SIGN or
   * \c #TYPE_SYMBOLIC_TRAFFIC_SIGN or \c #TYPE_TEXTUAL_TRAFFIC_SIGN ).
   *
   * \note Field need not be set (or set to \c #TYPE_OTHER)
   * if road marking type (\c #type) does not require it.
   *
   * \rules
   * check_if this.type is_greater_than_or_equal_to 2 else do_check is_set
   * check_if this.type is_less_than_or_equal_to 4 else do_check is_set
   * \endrules
   */
  country_revision?:
    | string
    | undefined;
  /**
   * Code specification of the traffic sign catalog specification
   * that identifies the actual traffic sign. This is part of the
   * 4-tupel traffic sign catalog specification as used in
   * <a href="https://releases.asam.net/OpenDRIVE/1.6.0/ASAM_OpenDRIVE_BS_V1-6-0.html#_signals">OpenDRIVE</a>.
   *
   * Code identifier according to country and country revision,
   * corresponds to the type field of OpenDRIVE. <br>
   * code is only unique in combination with #country and #country_revision.  <br>
   * e.g. http://www.vzkat.de/2017/VzKat.htm
   *
   * \note Field is set if ( \c #type == \c #TYPE_PAINTED_TRAFFIC_SIGN or
   * \c #TYPE_SYMBOLIC_TRAFFIC_SIGN or \c #TYPE_TEXTUAL_TRAFFIC_SIGN ).
   *
   * \note Field need not be set (or set to \c #TYPE_OTHER)
   * if road marking type (\c #type) does not require it.
   *
   * \rules
   * check_if this.type is_greater_than_or_equal_to 2 else do_check is_set
   * check_if this.type is_less_than_or_equal_to 4 else do_check is_set
   * \endrules
   */
  code?:
    | string
    | undefined;
  /**
   * Sub-code specification of the traffic sign catalog specification
   * that identifies the actual traffic sign. This is part of the
   * 4-tupel traffic sign catalog specification as used in
   * <a href="https://releases.asam.net/OpenDRIVE/1.6.0/ASAM_OpenDRIVE_BS_V1-6-0.html#_signals">OpenDRIVE</a>.
   *
   * Sub-code identifier according to country, country revision and code,
   * corresponds to the subtype field of OpenDRIVE. <br>
   * sub_code is only unique in combination with #country, #country_revision,
   * and #code.  <br>
   * e.g. http://www.vzkat.de/2017/VzKat.htm
   *
   * \note Field is set if ( \c #type == \c #TYPE_PAINTED_TRAFFIC_SIGN or
   * \c #TYPE_SYMBOLIC_TRAFFIC_SIGN or \c #TYPE_TEXTUAL_TRAFFIC_SIGN ).
   *
   * \note Field need not be set (or set to \c #TYPE_OTHER)
   * if road marking type (\c #type) does not require it.
   *
   * \rules
   * check_if this.type is_greater_than_or_equal_to 2 else do_check is_set
   * check_if this.type is_less_than_or_equal_to 4 else do_check is_set
   * \endrules
   */
  sub_code?:
    | string
    | undefined;
  /**
   * Assignment of this object to logical lanes.
   *
   * \note OSI uses singular instead of plural for repeated field names.
   */
  logical_lane_assignment?: LogicalLaneAssignment[] | undefined;
}

/** Definition of road marking types. */
export enum RoadMarking_Classification_Type {
  /**
   * UNKNOWN - Type of road marking is unknown (must not be used in ground
   * truth).
   */
  UNKNOWN = 0,
  /** OTHER - Other (unspecified but known) type of road marking. */
  OTHER = 1,
  /**
   * PAINTED_TRAFFIC_SIGN - Paint on the road surface indicating a color image of a traffic
   * sign.
   */
  PAINTED_TRAFFIC_SIGN = 2,
  /**
   * SYMBOLIC_TRAFFIC_SIGN - Paint on the road surface indicating a monochrome logical symbol
   * of a traffic sign (e.g. digits 50 as start of speed limit 50 or
   * stop line for stop sign).
   */
  SYMBOLIC_TRAFFIC_SIGN = 3,
  /**
   * TEXTUAL_TRAFFIC_SIGN - Paint on the road surface as a character string (e.g. BUS as bus
   * only lane).
   */
  TEXTUAL_TRAFFIC_SIGN = 4,
  /** GENERIC_SYMBOL - Paint on the road surface indicating a generic symbol. */
  GENERIC_SYMBOL = 5,
  /** GENERIC_LINE - Paint on the road surface indicating a generic line. */
  GENERIC_LINE = 6,
  /** GENERIC_TEXT - Paint on the road surface indicating a generic character string. */
  GENERIC_TEXT = 7,
}

/**
 * Definition of semantic road marking colors
 *
 * \note The color types represent the semantic classification of
 * road markings only. They do not represent an actual visual appearance.
 */
export enum RoadMarking_Classification_Color {
  /**
   * UNKNOWN - Color of road marking is unknown (must not be used in ground
   * truth).
   */
  UNKNOWN = 0,
  /** OTHER - Marking with another (unspecified but known) color. */
  OTHER = 1,
  /** WHITE - Marking with white color. */
  WHITE = 2,
  /** YELLOW - Marking with yellow / orange-yellow color. */
  YELLOW = 3,
  /** BLUE - Marking with blue color. */
  BLUE = 5,
  /** RED - Marking with red color. */
  RED = 6,
  /** GREEN - Marking with green color. */
  GREEN = 7,
  /** VIOLET - Marking with violet color. */
  VIOLET = 8,
  /** ORANGE - Marking with orange color. */
  ORANGE = 9,
}
