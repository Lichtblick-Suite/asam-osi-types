// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: osi_occupant.proto

/* eslint-disable */
import { type ExternalReference, type Identifier } from "./osi_common";

/** \brief An occupant of a host vehicle, especially the driver of the vehicle. */
export interface Occupant {
  /**
   * The ID of the driver.
   *
   * \rules
   * is_globally_unique
   * \endrules
   */
  id?:
    | Identifier
    | undefined;
  /** Specific information about the classification of the occupant. */
  classification?:
    | Occupant_Classification
    | undefined;
  /**
   * External reference to the occupant source.
   *
   * \note For OpenDRIVE and OpenSCENARIO there is no direct counterpart.
   *
   * \note For non-ASAM Standards, it is implementation-specific how
   *       source_reference is resolved.
   *
   * \note The value has to be repeated because one object may be derived
   *       from more than one origin source, for example, from a scenario file
   *       and from sensors.
   */
  source_reference?: ExternalReference[] | undefined;
}

/** \brief Information regarding the classification of the occupant. */
export interface Occupant_Classification {
  /**
   * Flag determining whether the person is the driver of the vehicle or a
   * passenger.
   */
  is_driver?:
    | boolean
    | undefined;
  /** Seat position of the vehicle occupant. */
  seat?:
    | Occupant_Classification_Seat
    | undefined;
  /**
   * Describes the state of the passenger's hands related to the steering
   * wheel (mostly driver).
   */
  steering_control?: Occupant_Classification_SteeringControl | undefined;
}

/** Definition of seat positions. */
export enum Occupant_Classification_Seat {
  /** UNKNOWN - Seat position is unknown (must not be used in ground truth). */
  UNKNOWN = 0,
  /** OTHER - Other (unspecified but known) seat. */
  OTHER = 1,
  /**
   * FRONT_LEFT - Seat position is in the front row, left seat.
   * This is usually the driver's seat in right-hand traffic.
   */
  FRONT_LEFT = 2,
  /**
   * FRONT_RIGHT - Seat position is in the front row, right seat.
   * This is usually the driver's seat in left-hand traffic.
   */
  FRONT_RIGHT = 3,
  /** FRONT_MIDDLE - Seat position is in the front row, middle seat. */
  FRONT_MIDDLE = 4,
  /** BACK_LEFT - Seat position is in the back row, left seat. */
  BACK_LEFT = 5,
  /** BACK_RIGHT - Seat position is in the back row, right seat. */
  BACK_RIGHT = 6,
  /** BACK_MIDDLE - Seat position is in the back row, middle seat. */
  BACK_MIDDLE = 7,
  /** THIRD_ROW_LEFT - Seat position is in the third row, left seat. */
  THIRD_ROW_LEFT = 8,
  /** THIRD_ROW_RIGHT - Seat position is in the third row, right seat. */
  THIRD_ROW_RIGHT = 9,
  /** THIRD_ROW_MIDDLE - Seat position is in the third row, middle seat. */
  THIRD_ROW_MIDDLE = 10,
}

/** Definition of hands related to the steering wheel (mostly driver). */
export enum Occupant_Classification_SteeringControl {
  /** UNKNOWN - Hands state is unknown (must not be used in ground truth). */
  UNKNOWN = 0,
  /**
   * OTHER - Other (unspecified but known) hand positioning related to the
   * steering wheel.
   */
  OTHER = 1,
  /** NO_HAND - Hands are not on the steering wheel. */
  NO_HAND = 2,
  /**
   * ONE_HAND - One hand is on the steering wheel. Whether it is the left or
   * right hand is unspecified or unknown.
   *
   * \note If there is no differentiation between one or both hands on
   * the steering wheel, this value should be used.
   */
  ONE_HAND = 3,
  /** BOTH_HANDS - Both hands are on the steering wheel. */
  BOTH_HANDS = 4,
  /** LEFT_HAND - Only left hand is on the steering wheel. */
  LEFT_HAND = 5,
  /** RIGHT_HAND - Only right hand is on the steering wheel. */
  RIGHT_HAND = 6,
}
